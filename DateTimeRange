<?php

namespace MatejBukovsky;

use DateTime;

/**
 * @author Matej Bukovsky <matejbukovsky@gmail.com>
 */
class DateTimeRange
{

	private $dates;

	private $iterator;

	public function __construct(\DateTimeInterface $dateFrom, \DateTimeInterface $dateTo, string $intervalSpec = 'P1D')
	{
		$interval = new \DateInterval($intervalSpec);
		$datePeriod = new \DatePeriod($dateFrom, $interval, $dateTo);
		$this->setDatesByPeriod($datePeriod);
	}

	public function next()
	{
		if (isset($this->iterator)) {
			$this->iterator++;
		} else {
			$this->iterator = 0;
		}

		if (array_key_exists($this->iterator, $this->dates)) {
			return TRUE;
		}
		return FALSE;
	}

	public function getIterator()
	{
		return $this->iterator;
	}

	public function getDate()
	{
		return $this->dates[$this->iterator];
	}

	public function resetIterator()
	{
		$this->iterator = NULL;
	}

	public function setDates(array $dates)
	{
		$this->dates = $dates;
	}

	public function setDatesByPeriod(\DatePeriod $period)
	{
		$this->dates = iterator_to_array($period);
	}

	public function addDate(DateTime $date)
	{
		$this->dates[] = $date;
	}

	public function isLast()
	{
		return (count($this->dates) - 1) === $this->iterator;
	}

}
